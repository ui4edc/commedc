<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="cn.com.ecrf.trq.repository.CRFMapper">
	<resultMap id="patientInfoResultMap" type="cn.com.ecrf.trq.model.PatientInfoCase" >
	    <id column="id" property="id" jdbcType="INTEGER" />
	    <result column="no" property="no" jdbcType="VARCHAR" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="abbr" property="abbr" jdbcType="VARCHAR" />
	    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
	    <result column="age" property="age" jdbcType="INTEGER" />
	    <result column="weight" property="weight" jdbcType="FLOAT" />
	    <result column="sex" property="sex" jdbcType="VARCHAR" />
	    <result column="ethic" property="ethic" jdbcType="VARCHAR" />
	    <result column="hys" property="hys" jdbcType="VARCHAR" />
	    <result column="height" property="height" jdbcType="INTEGER" />
	    <result column="yyks" property="yyks" jdbcType="VARCHAR" />
	    <result column="yykstxt" property="yykstxt" jdbcType="VARCHAR" />
	    <result column="ryrq" property="ryrq" jdbcType="TIMESTAMP" />
	    <result column="cyrq" property="cyrq" jdbcType="TIMESTAMP" />
	    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
	    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
	</resultMap>
	<insert id="insertPatientInfo" parameterType="cn.com.ecrf.trq.model.PatientInfoCase">
      	<selectKey resultType="Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID()
		</selectKey>
	    insert into crf_patient_info (id, no, name, abbr, birthday, age,
	      weight, sex, ethic, hys, height, yyks, ryrq, cyrq, ylfyfs, create_time, create_by, yykstxt, ylfyfstxt)
	    values (#{id}, #{no}, #{name}, #{abbr}, #{birthday}, #{age}, 
	      #{weight}, #{sex}, #{ethic}, #{hys}, #{height}, #{yyks}, #{ryrq}, #{cyrq}, #{ylfyfs}, 
	      current_timestamp(), #{createBy}, #{yykstxt}, #{ylfyfstxt})
	</insert>
	<update id="updatePatientInfo" parameterType="cn.com.ecrf.trq.model.PatientInfoCase" >
	    update crf_patient_info set birthday=#{birthday}, age=#{age},
	      weight=#{weight}, sex=#{sex}, ethic=#{ethic}, hys=#{hys}, height=#{height}, yyks=#{yyks}, ryrq=#{ryrq}, cyrq=#{cyrq}, ylfyfs=#{ylfyfs},
	      weightud=#{weightud},heightud=#{heightud}, yykstxt=#{yykstxt}, ylfyfstxt=#{ylfyfstxt}
		where id=#{id}
	</update>
	<select id="getDoubtCRFNum" parameterType="string" resultType="int">
		select count(*) from crf_user_sign c where c.lockstatus=30 and cro_name=#{userName}
	</select>
  	<select id="getToDoNum" parameterType="string" resultType="int">
		select count(*) from crf_user_sign c where c.lockstatus=10 and cro_name=#{userName}
	</select>
	<select id="getPatientList" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="cn.com.ecrf.trq.model.list.ListReturn">
		select 
			p.abbr as abbr,
			p.no as no,
			p.id as id,
			us.cro_createtime as createDate,
			us.cro_updatetime as lastModified,
			us.progress as progress
		 from crf_patient_info p, crf_user_sign us where us.lockstatus=#{lockStatus} and p.no=us.no
		 <if test="abbr != null and abbr != ''" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null and  no != ''" >
        	and p.no=#{no}
      	</if>
      	<if test="crf == false">
      		and p.no in (select no from crf_adr_info)
      	</if>
		<choose>
			<when test="progressType == 1">
				and us.progress >= #{progress}
			</when>
			<when test="progressType == 2">
				and #{progress} >= us.progress
			</when>
		    <otherwise>    
            </otherwise>    
		</choose>
      	<if test="createDateFrom != null" >
        	and us.cro_createtime>=#{createDateFrom} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
      	<if test="userName != null and roleName!='DM'">
      		and (us.cro_name=#{userName} or us.crm_name=#{userName} or us.dm_name=#{userName})
      	</if>
		<choose>
		    <when test="orderBy == 'no'">
		      order by p.no
		    </when>
		    <when test="orderBy == 'abbr'">
		      order by p.abbr
		    </when>
		    <when test="orderBy == 'createDate'">
		      order by us.cro_createtime
		    </when>
		    <when test="orderBy == 'lastModified'">
		      order by us.cro_updatetime
		    </when>
		    <otherwise>
		      order by us.cro_createtime
		    </otherwise>
		  </choose>
		 <choose>
		    <when test="desc == true">
		       desc
		    </when>
		    <otherwise>
		       asc
		    </otherwise>
		 </choose>
      	<if test="limitSize > 0">
      		LIMIT #{limitStart},#{limitSize}
      	</if>
	</select>
	<select id="getPatientListByCRM" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="cn.com.ecrf.trq.model.list.ListReturn">
		select 
			p.abbr as abbr,
			p.no as no,
			p.id as id,
			us.cro_createtime as createDate,
			us.cro_updatetime as lastModified,
			us.progress as progress
		 from crf_patient_info p, crf_user_sign us, ac_user cro, ac_user crm, ac_organization o where us.lockstatus=#{lockStatus} and p.no=us.no
		  and us.cro_name=cro.user_name and cro.fk_organization_id=o.id and o.fk_crmuser_id=crm.id and crm.user_name=#{userName}
		 <if test="abbr != null and abbr != ''" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null and  no != ''" >
        	and p.no=#{no}
      	</if>
      	<if test="crf == false">
      		and p.no in (select no from crf_adr_info)
      	</if>
		<choose>
			<when test="progressType == 1">
				and us.progress >= #{progress}
			</when>
			<when test="progressType == 2">
				and #{progress} >= us.progress
			</when>
		    <otherwise>    
            </otherwise>    
		</choose>
      	<if test="createDateFrom != null" >
        	and us.cro_createtime>=#{createDateFrom} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
		<choose>
		    <when test="orderBy == 'no'">
		      order by p.no
		    </when>
		    <when test="orderBy == 'abbr'">
		      order by p.abbr
		    </when>
		    <when test="orderBy == 'createDate'">
		      order by us.cro_createtime
		    </when>
		    <when test="orderBy == 'lastModified'">
		      order by us.cro_updatetime
		    </when>
		    <otherwise>
		      order by us.cro_createtime
		    </otherwise>
		  </choose>
		 <choose>
		    <when test="desc == true">
		       desc
		    </when>
		    <otherwise>
		       asc
		    </otherwise>
		 </choose>
      	<if test="limitSize > 0">
      		LIMIT #{limitStart},#{limitSize}
      	</if>
	</select>
	
	
	<select id="getTotalPatientNum" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="int">
		select 
			count(*)
		 from crf_patient_info p, crf_user_sign us where us.lockstatus=#{lockStatus} and p.no=us.no
		 <if test="abbr != null and abbr != ''" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null and  no != ''" >
        	and p.no=#{no}
      	</if>
      	<if test="crf == false">
      		and p.no in (select no from crf_adr_info)
      	</if>
		<choose>
			<when test="progressType == 1">
				and us.progress >= #{progress}
			</when>
			<when test="progressType == 2">
				and #{progress} >= us.progress
			</when>
		    <otherwise>    
            </otherwise>    
		</choose>
      	<if test="createDateFrom != null" >
        	and us.cro_createtime>=#{createDateFrom} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
      	<if test="userName != null and roleName!='DM'">
      		and (us.cro_name=#{userName} or us.crm_name=#{userName} or us.dm_name=#{userName})
      	</if>
	</select>
	
	<select id="getTotalPatientNumByCRM" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="int">
		select 
			count(*)
		 from crf_patient_info p, crf_user_sign us, ac_user cro, ac_user crm, ac_organization o where us.lockstatus=#{lockStatus} and p.no=us.no
		  and us.cro_name=cro.user_name and cro.fk_organization_id=o.id and o.fk_crmuser_id=crm.id and crm.user_name=#{userName}
		 <if test="abbr != null and abbr != ''" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null and  no != ''" >
        	and p.no=#{no}
      	</if>
      	<if test="crf == false">
      		and p.no in (select no from crf_adr_info)
      	</if>
		<choose>
			<when test="progressType == 1">
				and us.progress >= #{progress}
			</when>
			<when test="progressType == 2">
				and #{progress} >= us.progress
			</when>
		    <otherwise>    
            </otherwise>    
		</choose>
      	<if test="createDateFrom != null" >
        	and us.cro_createtime>=#{createDateFrom} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
	</select>
	
	
	<select id="getDoutSummaryList" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="cn.com.ecrf.trq.model.list.ListReturn">
		select 
			p.abbr as abbr,
			p.no as no,
			p.id as id,
			us.cro_createtime as createDate,
			us.cro_updatetime as lastModified,
			us.progress as progress,
		 	d.doubter as doubter,
			count(1) as doubtNumber,
			d.doubt_time as doubtDate
		 from crf_patient_info p, crf_user_sign us, crf_doubt d where 
		 p.no=us.no and d.no=p.no
		 <if test="abbr != null and abbr != ''" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null and no != ''" >
        	and p.no=#{no}
      	</if>
      	<if test="crf == false">
      		and p.no in (select no from crf_adr_info)
      	</if>
      	<if test="userName != null and roleName!='DM'">
      		and us.cro_name=#{userName}
      	</if>
      	<if test="createDateFrom != null" >
        	and us.cro_createtime>=#{createDateFrom} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
      	<choose>
			<when test="undealed == true">
				and d.flag=0
			</when>
		    <otherwise>
		    	and d.flag=1    
            </otherwise>    
		</choose>
      	<if test="undealed == true">
      		and d.flag=0
      	</if>
      	group by p.no
      	<choose>
		    <when test="orderBy == 'no'">
		      order by p.no
		    </when>
		    <when test="orderBy == 'abbr'">
		      order by p.abbr
		    </when>
		    <when test="orderBy == 'createDate'">
		      order by us.cro_createtime
		    </when>
		    <when test="orderBy == 'lastModified'">
		      order by us.cro_updatetime
		    </when>
		    <otherwise>
		      order by us.cro_createtime
		    </otherwise>
		  </choose>
		 <choose>
		    <when test="desc == true">
		       desc
		    </when>
		    <otherwise>
		       asc
		    </otherwise>
		 </choose>
      	<if test="limitSize > 0">
      		LIMIT #{limitStart},#{limitSize}
      	</if>
	</select>
	<select id="getDoutSummaryListByCRM" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="cn.com.ecrf.trq.model.list.ListReturn">
		select 
			p.abbr as abbr,
			p.id as id,
			p.no as no,
			us.cro_createtime as createDate,
			us.cro_updatetime as lastModified,
			us.progress as progress,
		 	d.doubter as doubter,
			count(1) as doubtNumber
		 from crf_patient_info p, crf_user_sign us, crf_doubt d, ac_user cro, ac_user crm, ac_organization o where us.lockstatus=#{lockStatus} and p.no=us.no
		  and d.no=p.no and us.cro_name=cro.user_name and cro.fk_organization_id=o.id and o.fk_crmuser_id=crm.id and crm.user_name=#{userName}
		 <if test="abbr != null and abbr != ''" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null and no != ''" >
        	and p.no=#{no}
      	</if>
      	<if test="crf == false">
      		and p.no in (select no from crf_adr_info)
      	</if>
      	<if test="createDateFrom != null" >
        	and us.cro_createtime>=#{createDateFrom} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
      	<choose>
			<when test="undealed == true">
				and d.flag=0
			</when>
		    <otherwise>
		    	and d.flag=1    
            </otherwise>    
		</choose>
      	group by p.no
      	<choose>
		    <when test="orderBy == 'no'">
		      order by p.no
		    </when>
		    <when test="orderBy == 'abbr'">
		      order by p.abbr
		    </when>
		    <when test="orderBy == 'createDate'">
		      order by us.cro_createtime
		    </when>
		    <when test="orderBy == 'lastModified'">
		      order by us.cro_updatetime
		    </when>
		    <otherwise>
		      order by us.cro_createtime
		    </otherwise>
		  </choose>
		 <choose>
		    <when test="desc == true">
		       desc
		    </when>
		    <otherwise>
		       asc
		    </otherwise>
		 </choose>
      	<if test="limitSize > 0">
      		LIMIT #{limitStart},#{limitSize}
      	</if>
	</select>
	
	<select id="getProgress" parameterType="string" resultType="int">
		select progress from crf_user_sign where no=#{no}
	</select>
	<select id="getCRFSumm" parameterType="int" resultType="cn.com.ecrf.trq.model.list.ListReturn">
		select 
			p.abbr as abbr,
			p.no as no,
			p.id as id,
			us.cro_createtime as createDate,
			us.cro_updatetime as lastModified,
			us.progress as progress
		 from crf_patient_info p, crf_user_sign us where p.no=us.no and p.id=#{id}
	</select>
	<select id="getBasicInfo" parameterType="int" resultType="cn.com.ecrf.trq.model.PatientInfoCase">
		select 
			id as id,
			no as no,
			name as name,
			abbr as abbr,
			birthday as birthday,
			age as age,
			weight as weight,
			weightud as weightud,
			sex as sex,
			ethic as ethic,
			hys as hys,
			height as height,
			heightud as heightud,
			yyks as yyks,
			yykstxt as yykstxt,
			ryrq as ryrq,
			cyrq as cyrq,
			ylfyfs as ylfyfs,
			ylfyfstxt as ylfyfstxt
			from crf_patient_info where id=#{id}
	</select>
	<delete id="deletePatientInfo" parameterType="int">
		delete from crf_patient_info where id=#{id}
	</delete>
	<select id="getPersonHistory" parameterType="int" resultType="cn.com.ecrf.trq.model.PersonAllergicHistoryCase">
		select 
			pi.id as id,
			pi.no as no,
			smoke as smoke,
			drink as drink,
			drug as drug,
			food as food,
			other as other,
			druglb as druglb,
			foodlb as foodlb,
			otherlb as otherlb
			from crf_person_history ph, crf_patient_info pi where pi.id=#{id} and pi.no=ph.no
	</select>
	<insert id="insertPersonHistory" parameterType="cn.com.ecrf.trq.model.PersonAllergicHistoryCase">
	    insert into crf_person_history (no, smoke, drink, drug, food,
	      other, druglb, foodlb, otherlb, create_time)
	    values (#{no}, #{smoke}, #{drink}, #{drug}, #{food}, #{other}, 
	      #{druglb}, #{foodlb}, #{otherlb}, current_timestamp());
	</insert>
	<update id="updatePersonHistory" parameterType="cn.com.ecrf.trq.model.PersonAllergicHistoryCase" >
		update crf_person_history set
		smoke=#{smoke}, drink=#{drink}, drug=#{drug},
		food=#{food}, other=#{other}, druglb=#{druglb}, foodlb=#{foodlb}, otherlb=#{otherlb}, update_time=now()
  		where no=#{no}
	</update>
	<update id="updateProgress" parameterType="int">
		update crf_user_sign us set us.progress=#{progress} where us.no=#{no}
	</update>
	<select id="getPastHistory" parameterType="int" resultType="cn.com.ecrf.trq.model.PastHistoryCase">
		select 
			pi.id as id,
			ph.no as no,
			allergy as allergy,
			allergytxt as allergytxt,
			disease as disease,
			disease1 as disease1,
			disease2 as disease2,
			diseasetxt as diseasetxt,
			gxb as gxb,
			gxy as gxy,
			hasAllergy as hasAllergy,
			hasDisease as hasDisease,
			tnb as tnb
			from crf_past_history ph, crf_patient_info pi where pi.id=#{id} and pi.no=ph.no
	</select>
	<insert id="insertPastHistory" parameterType="cn.com.ecrf.trq.model.PastHistoryCase">
	    insert into crf_past_history (no, allergy, allergytxt, disease, disease1, disease2, diseasetxt, gxb,
	    gxy, hasAllergy, hasDisease, tnb)
	    values (#{no}, #{allergy}, #{allergytxt}, #{disease}, #{disease1}, #{disease2}, #{diseasetxt}, #{gxb}, #{gxy}, #{hasAllergy}, 
	    #{hasDisease}, #{tnb});
	</insert>
	<update id="updatePastHistory" parameterType="cn.com.ecrf.trq.model.PastHistoryCase" >
		update crf_past_history set
		allergy=#{allergy}, allergytxt=#{allergytxt}, disease=#{disease},
		disease1=#{disease1}, disease2=#{disease2}, diseasetxt=#{diseasetxt},gxb=#{gxb},
		gxy=#{gxy}, hasAllergy=#{hasAllergy}, hasDisease=#{hasDisease}, tnb=#{tnb} 
  		where no=#{no}
	</update>
	<update id="updateNextSeq" parameterType="int">
		update crf_no set seq=seq+1 where fk_organization_id=#{id}
	</update>
	<select id="getNextSeq" resultType="int">
		select seq from crf_no where fk_organization_id=#{id}
	</select>
	<insert id="insertCRF" parameterType="cn.com.ecrf.trq.model.PatientInfoCase">
      	<selectKey resultType="int" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID()
		</selectKey>
	    insert into crf_patient_info (no, abbr, create_time, create_by)
	    values (#{no}, #{abbr}, current_timestamp(), #{createBy})
	</insert>
	<select id="getFormEnumValueByName" parameterType="map" resultType="cn.com.ecrf.trq.model.CRFFormEnum">
		select seq as seq
		from crf_form_enum where name=#{name} and abbr=#{type}
	</select>
	<select id="getFormEnumValue" parameterType="map" resultType="cn.com.ecrf.trq.model.CRFFormEnum">
		select name as name
		from crf_form_enum where abbr=#{type} and seq=#{seq}
	</select>
	<select id="getDiseaseInfo" parameterType="int" resultType="cn.com.ecrf.trq.model.DiseaseInfoCase">
		select 
			pi.id as id,
			ph.no as no,
			diagnosis as diagnosis,
			disease1 as disease1,
			disease2 as disease2,
			disease3 as disease3,
			diseasetxt as diseasetxt,
			fy as fy,
			zy as zy,
			zytxt as zytxt
			from crf_disease_info ph, crf_patient_info pi where pi.id=#{id} and pi.no=ph.no
	</select>
	<insert id="insertDiseaseInfo" parameterType="cn.com.ecrf.trq.model.DiseaseInfoCase">
	    insert into crf_disease_info (no, diagnosis, disease1, disease2, disease3, diseasetxt, fy,
	    zy, zytxt, create_time)
	    values (#{no}, #{diagnosis}, #{disease1}, #{disease2}, #{disease3}, #{diseasetxt}, #{fy}, #{zy}, #{zytxt},
	    current_timestamp());
	</insert>
	<update id="updateDiseaseInfo" parameterType="cn.com.ecrf.trq.model.DiseaseInfoCase" >
		update crf_disease_info set
		diagnosis=#{diagnosis}, disease1=#{disease1}, disease2=#{disease2},
		disease3=#{disease3}, diseasetxt=#{diseasetxt}, fy=#{fy},
		zy=#{zy}, zytxt=#{zytxt}, update_time=now()
  		where no=#{no}
	</update>
	<select id="getDrugUseInfo" parameterType="map" resultType="cn.com.ecrf.trq.model.DrugUseCase">
		select 
			pi.id as id,
			ph.no as no,
			ph.seq as drugUseId,
			history as history,
			adr as adr,
			adrtxt as adrtxt,
			banColor as banColor,
			bantxt as bantxt,
			banDruglb as banDruglb,
			batchNumber as batchNumber,
			bottlelb as bottlelb,
			dose as dose,
			endDate as endDate,
			endH as endH,
			endM as endM,
			food as food,
			foodtxt as foodtxt,
			gSolvent2Dose as gSolvent2Dose,
			gpSolvent as gpSolvent,
			gpSolvent1Dose as gpSolvent1Dose,
			gpSolvent3Dose as gpSolvent3Dose,
			gpSolvent3Name as gpSolvent3Name,
			gpSolvent3Percent as gpSolvent3Percent,
			hasBan as hasBan,
			hasFood as hasFood,
			hasInjection as hasInjection,
			injectionlb as injectionlb,
			prepareTime as prepareTime,
			prepareTimeUd as prepareTimeUd,
			sameBottle as sameBottle,
			sameGroup as sameGroup,
			grouplb as grouplb,
			solvent as solvent,
			solventDose as solventDose,
			solventName as solventName,
			solventPercent as solventPercent,
			startDate as startDate,
			startH as startH,
			startM as startM,
			way as way,
			way1Speed as way1Speed,
			way1Time as way1Time,
			way2Speed as way2Speed,
			way3Name as way3Name,
			way3Speed as way3Speed,
			way3Unit as way3Unit
		from crf_druguse_info ph, crf_patient_info pi where pi.id=#{id} and pi.no=ph.no 
		<if test="drugUseId != null">
      		and ph.seq=#{drugUseId}
      	</if> 
      	order by ph.seq asc
	</select>
	
	<insert id="insertDrugUseInfo" parameterType="cn.com.ecrf.trq.model.DrugUseCase">
     	<selectKey resultType="Integer" order="AFTER" keyProperty="drugUseId">
			SELECT LAST_INSERT_ID()
		</selectKey>  
	    insert into crf_druguse_info (no, seq, history, adr, adrtxt, banColor, bantxt, banDruglb,
	    batchNumber, bottlelb,dose, endDate, endH, endM, food, foodtxt, gSolvent2Dose, gpSolvent1Dose,
	    gpSolvent3Dose, gpSolvent3Name, gpSolvent3Percent, hasBan, hasFood, hasInjection, injectionlb,
	    prepareTime, prepareTimeUd, sameBottle, sameGroup, solvent, solventDose, solventName, solventPercent,
	    startDate, startH, startM, way, way1Speed, way1Time, way2Speed, way3Name, way3Speed, way3Unit,nextGroup, nextGroupName, useSolvent, location)
	    values (#{no}, #{drugUseId}, #{history}, #{adr}, #{adrtxt}, #{banColor}, #{bantxt}, #{banDruglb}, 
	    #{batchNumber}, #{bottlelb},#{dose}, #{endDate}, #{endH}, #{endM}, #{food}, #{foodtxt}, #{gSolvent2Dose}, #{gpSolvent1Dose},
	    #{gpSolvent3Dose}, #{gpSolvent3Name},#{gpSolvent3Percent}, #{hasBan}, #{hasFood}, #{hasInjection}, #{injectionlb}, 
	    #{prepareTime}, #{prepareTimeUd}, #{sameBottle}, #{sameGroup},#{solvent}, #{solventDose}, #{solventName}, #{solventPercent},
	     #{startDate}, #{startH}, #{startM}, #{way},#{way1Speed}, #{way1Time}, #{way2Speed}, #{way3Name}, #{way3Speed}, #{way3Unit},#{nextGroup}, #{nextGroupName}, #{useSolvent}, #{location});
	</insert>
	<insert id="insertDrugUseInfoWithDrugUseId" parameterType="cn.com.ecrf.trq.model.DrugUseCase"> 
	    insert into crf_druguse_info (no, seq, history, adr, adrtxt, banColor, bantxt, banDruglb,
	    batchNumber, bottlelb,dose, endDate, endH, endM, food, foodtxt, gSolvent2Dose, gpSolvent1Dose,
	    gpSolvent3Dose, gpSolvent3Name, gpSolvent3Percent, hasBan, hasFood, hasInjection, injectionlb,
	    prepareTime, prepareTimeUd, sameBottle, sameGroup, solvent, solventDose, solventName, solventPercent,
	    startDate, startH, startM, way, way1Speed, way1Time, way2Speed, way3Name, way3Speed, way3Unit,nextGroup, nextGroupName, useSolvent, location)
	    values (#{no}, #{drugUseId}, #{history}, #{adr}, #{adrtxt}, #{banColor}, #{bantxt}, #{banDruglb}, 
	    #{batchNumber}, #{bottlelb},#{dose}, #{endDate}, #{endH}, #{endM}, #{food}, #{foodtxt}, #{gSolvent2Dose}, #{gpSolvent1Dose},
	    #{gpSolvent3Dose}, #{gpSolvent3Name},#{gpSolvent3Percent}, #{hasBan}, #{hasFood}, #{hasInjection}, #{injectionlb}, 
	    #{prepareTime}, #{prepareTimeUd}, #{sameBottle}, #{sameGroup},#{solvent}, #{solventDose}, #{solventName}, #{solventPercent},
	     #{startDate}, #{startH}, #{startM}, #{way},#{way1Speed}, #{way1Time}, #{way2Speed}, #{way3Name}, #{way3Speed}, #{way3Unit},#{nextGroup}, #{nextGroupName}, #{useSolvent}, #{location});
	</insert>
	
	<update id="updateDrugUseInfo" parameterType="cn.com.ecrf.trq.model.DrugUseCase" >
		update crf_druguse_info set
		history=#{history}, adr=#{adr},
		adrtxt=#{adrtxt}, banColor=#{banColor}, bantxt=#{bantxt},banDruglb=#{banDruglb},
		batchNumber=#{batchNumber}, bottlelb=#{bottlelb},dose=#{dose}, endDate=#{endDate}, endH=#{endH}, endM=#{endM}, food=#{food}, foodtxt=#{foodtxt}, 
		gSolvent2Dose=#{gSolvent2Dose}, gpSolvent1Dose=#{gpSolvent1Dose},
	    gpSolvent3Dose=#{gpSolvent3Dose}, gpSolvent3Name=#{gpSolvent3Name}, gpSolvent3Percent=#{gpSolvent3Percent}, hasBan=#{hasBan}, hasFood=#{hasFood}, hasInjection=#{hasInjection}, injectionlb=#{injectionlb},
	    prepareTime=#{prepareTime}, prepareTimeUd=#{prepareTimeUd}, sameBottle=#{sameBottle}, sameGroup=#{sameGroup}, solvent=#{solvent}, solventDose=#{solventDose}, solventName=#{solventName}, solventPercent=#{solventPercent},
	    startDate=#{startDate}, startH=#{startH}, startM=#{startM}, way=#{way}, way1Speed=#{way1Speed}, way1Time=#{way1Time}, way2Speed=#{way2Speed}, way3Name=#{way3Name}, way3Speed=#{way3Speed}, way3Unit=#{way3Unit}, 
	    nextGroup=#{nextGroup}, nextGroupName=#{nextGroupName}, useSolvent=#{useSolvent}, location=#{location}
  		where no=#{no} and seq=#{drugUseId}
	</update>
	<update id="updateAllDrugUseInfo" parameterType="cn.com.ecrf.trq.model.DrugUseCase">
		update crf_druguse_info set
		history=#{history}, adr=#{adr},
		adrtxt=#{adrtxt}
		where no=#{no}
	</update>
	<select id="getDrugCombinationList" parameterType="int" resultType="cn.com.ecrf.trq.model.DrugCombinationCase">
		select d.seq as seq,
			   d.no as no,
			   d.name as name,
			   d.startDate as startDate,
			   d.endDate as endDate,
			   d.dose as dose,
			   d.unit as unit,
			   d.way as way,
			   d.frequency as frequency
		from crf_drugcombination_info d, crf_patient_info p where p.id=#{id} and p.no=d.no order by seq asc
	</select>
	<insert id="insertDrugCombination" parameterType="cn.com.ecrf.trq.model.DrugCombinationCase">
		<selectKey resultType="Integer" order="AFTER" keyProperty="seq">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into crf_drugcombination_info(seq,no,name,startDate,endDate,dose,unit,way,frequency) values(#{seq}, #{no}, #{name}, #{startDate}, #{endDate}, #{dose}, #{unit}, #{way}, #{frequency});
	</insert>
	<update id="updateDrugCombination" parameterType="cn.com.ecrf.trq.model.DrugCombinationCase">
		update crf_drugcombination_info set no=#{no}, name=#{name}, startDate=#{startDate}, endDate=#{endDate}, dose=#{dose}, unit=#{unit},
		way=#{way}, frequency=#{frequency} where seq=#{seq}
	</update>
	<delete id="deleteDrugCombination" parameterType="string">
		delete from crf_drugcombination_info where no=#{no}
	</delete>
	<select id="getLabExamCase" parameterType="map" resultType="cn.com.ecrf.trq.model.LabExamCase">
		select
			   l.no as no,
			   l.done as done,
			   l.examdate as examDate,
			   sample as sample,
			   result as result,
			   resulttxt1 as resulttxt1,
			   resulttxt2 as resulttxt2,
			   resulttxt3 as resulttxt3,
			   data1 as data1,
			   data2 as data2,
			   data3 as data3,
			   data4 as data4,
			   data5 as data5,
			   data6 as data6,
			   l.phase as phase
		from crf_labexam_info l, crf_patient_info p where p.id=#{id} and p.no=l.no and phase=#{phase}
	</select>
	<insert id="insertLabExamCase" parameterType="cn.com.ecrf.trq.model.LabExamCase">
		insert into crf_labexam_info(no, done, examdate, sample, result, resulttxt1, resulttxt2, resulttxt3, data1, data2, data3, data4, data5, data6, phase) values(#{no}, #{done}, #{examDate}, #{sample},#{result}, #{resulttxt1}, #{resulttxt2}, #{resulttxt3}, #{data1}, #{data2}, #{data3}, #{data4},#{data5}, #{data6}, #{phase});
	</insert>
	<update id="updateLabExamCase" parameterType="cn.com.ecrf.trq.model.LabExamCase">
		update crf_labexam_info set done=#{done},examdate=#{examDate}, sample=#{sample}, result=#{result}, resulttxt1=#{resulttxt1},
		resulttxt2=#{resulttxt2}, resulttxt3=#{resulttxt3}, data1=#{data1}, data2=#{data2}, data3=#{data3},
		data4=#{data4}, data5=#{data5}, data6=#{data6} where no=#{no} and phase=#{phase}
	</update>
	<select id="getDrugSummary" parameterType="int" resultType="cn.com.ecrf.trq.model.DrugSummaryCase">
		select 	d.no as no,
				d.startDate as startDateDate,
				d.endDate as endDateDate,
				d.ending as ending,
				d.deathReason as deathReason,
				d.deathDate as deathDateDate,
				d.hasAdr as hasAdr,
				d.adr as adr,
				d.adr1 as adr1,
				d.adr2 as adr2,
				d.adr3 as adr3,
				d.adr4 as adr4,
				d.adr5 as adr5,
				d.adr6 as adr6,
				d.adrtxt as adrtxt,
				d.hasOtherAdr as hasOtherAdr,
				d.unreasonable as unreasonable,
				d.intervention as intervention,
				d.interventiontxt as interventiontxt,
				d.treatmentCost as treatmentCost,
				d.drugCost as drugCost,
				d.trqCost as trqCost,
				d.remark as remark
		from crf_drugsummary_info d, crf_patient_info p where p.id=#{id} and p.no=d.no
	</select>
	<insert id="insertDrugSummary" parameterType="cn.com.ecrf.trq.model.DrugSummaryCase">
		insert into crf_drugsummary_info (no, startDate, endDate, ending, deathReason, deathDate,
		hasAdr, adr, adr1, adr2, adr3, adr4, adr5, adr6, adrtxt, hasOtherAdr, unreasonable, intervention, interventiontxt, treatmentCost, drugCost, trqCost, remark)
		values (#{no}, #{startDateDate}, #{endDateDate}, #{ending}, #{deathReason}, #{deathDateDate}, 
		#{hasAdr}, #{adr}, #{adr1},#{adr2},#{adr3},#{adr4},#{adr5},#{adr6}, #{adrtxt}, #{hasOtherAdr}, #{unreasonable}, #{intervention}, #{interventiontxt}, #{treatmentCost}, #{drugCost},
		#{trqCost}, #{remark});
	</insert>
	<update id="updateDrugSummary" parameterType="cn.com.ecrf.trq.model.DrugSummaryCase">
		update crf_drugsummary_info set no=#{no}, startDate=#{startDateDate}, endDate=#{endDateDate},
		ending=#{ending},deathReason=#{deathReason}, deathDate=#{deathDateDate}, hasAdr=#{hasAdr}, adr=#{adr}, adr1=#{adr1}, adr2=#{adr2},adr3=#{adr3},adr4=#{adr4},adr5=#{adr5},adr6=#{adr6},adrtxt=#{adrtxt}, hasOtherAdr=#{hasOtherAdr}, unreasonable=#{unreasonable},
		intervention=#{intervention}, interventiontxt=#{interventiontxt}, treatmentCost=#{treatmentCost},
		drugCost=#{drugCost}, trqCost=#{trqCost}, remark=#{remark} where no=#{no}
	</update>
	<select id="getADR" parameterType="int" resultType="cn.com.ecrf.trq.model.ADRCase">
		select id as id,
			   a.no as no,
			   a.type as typeStr,
			   a.blood as bloodStr,
			   a.name as name,
			   a.sex as sexStr,
			   a.birthday as birthdayDate,
			   a.ethic as ethicStr,
			   a.weight as weight,
			   a.contact as contact,
			   a.disease as disease,
			   a.patientNo as patientNo,
			   a.historyadr as historyadrStr,
			   a.historyadrtxt as historyadrtxt,
			   a.familyadr as familyadrStr,
			   a.familyadrtxt as familyadrtxt,
			   a.relationship as relationshipStr,
			   a.info as info,
			   a.info6txt as info6txt,
			   a.info7txt as info7txt,
			   a.drug1 as drug1Str,
			   a.drug2 as drug2Str,
			   a.adr as adr,
			   a.adr1 as adr1,
			   a.adr2 as adr2,
			   a.adr3 as adr3,
			   a.adr4 as adr4,
			   a.adr5 as adr5,
			   a.adr6 as adr6,
			   a.adr7 as adr7,
			   a.adr8 as adr8,
			   a.adr9 as adr9,
			   a.adr10 as adr10,
			   a.adrtxt as adrtxt,
			   a.adrDate as adrDateDate,
			   a.adrH as adrH,
			   a.adrM as adrM,
			   a.adrDescription as adrDescription,
			   a.adrDeal as adrDealStr,
			   a.adrDeal3 as adrDeal3Str,
			   a.adrDeal3txt as adrDeal3txt,
			   a.adrDealDose as adrDealDose,
			   a.adrDeal4txt as adrDeal4txt,
			   a.adrDealRemark as adrDealRemark,
			   a.ending as endingStr,
			   a.endingtxt as endingtxt,
			   a.deathDate as deathDateDate,
			   a.deathReason as deathReason,
			   a.adrStop as adrStopStr,
			   a.adrRestart as adrRestartStr,
			   a.evaluate as evaluateStr,
			   a.career as careerStr,
			   a.careertxt as careertxt,
			   a.email as email,
			   a.reportDate as reportDateDate,
			   a.remark as remark
			   from crf_adr_info a, crf_patient_info p where a.no=p.no and p.id=#{id}
	</select>
	<insert id="insertADR" parameterType="cn.com.ecrf.trq.model.ADRCase">
		insert into crf_adr_info(no, type, blood, name, sex, birthday, ethic, weight, contact, disease,
		patientNo, historyadr, historyadrtxt, familyadr, familyadrtxt, relationship, info, info6txt,
		info7txt, drug1, drug2, adr, adr1, adr2, adr3, adr4, adr5, adr6, adr7, adr8, adr9, adr10,
		adrtxt, adrDate, adrH, adrM, adrDescription, adrDeal, adrDeal3, adrDeal3txt, adrDealDose, 
		adrDeal4txt, adrDealRemark, ending, endingtxt, deathDate, deathReason, adrStop, adrRestart,
		evaluate, career, careertxt, email, reportDate, remark) 
		values(#{no},#{typeStr},#{bloodStr},#{name},#{sexStr},#{birthdayDate},#{ethicStr},#{weight},#{contact}, #{disease},
		#{patientNo},#{historyadrStr},#{historyadrtxt},#{familyadrStr},#{familyadrtxt},#{relationshipStr},#{info},#{info6txt},
		#{info7txt},#{drug1Str},#{drug2Str},#{adr},#{adr1},#{adr2},#{adr3},#{adr4},#{adr5},#{adr6},#{adr7},#{adr8},#{adr9},#{adr10},
		#{adrtxt},#{adrDateDate},#{adrH},#{adrM},#{adrDescription},#{adrDealStr},#{adrDeal3Str},#{adrDeal3txt},#{adrDealDose},
		#{adrDeal4txt},#{adrDealRemark},#{endingStr},#{endingtxt},#{deathDateDate},#{deathReason},#{adrStopStr},#{adrRestartStr},
		#{evaluateStr},#{careerStr},#{careertxt},#{email},#{reportDateDate},#{remark});
	</insert> 
	<update id="updateADR" parameterType="cn.com.ecrf.trq.model.ADRCase">
		update crf_adr_info set 
			type=#{typeStr},blood=#{bloodStr},name=#{name},sex=#{sexStr},birthday=#{birthdayDate},ethic=#{ethicStr},weight=#{weight},contact=#{contact},disease=#{disease},
			patientNo=#{patientNo},historyadr=#{historyadrStr},historyadrtxt=#{historyadrtxt},familyadr=#{familyadrStr},familyadrtxt=#{familyadrtxt},relationship=#{relationshipStr},info=#{info},info6txt=#{info6txt},
			info7txt=#{info7txt},drug1=#{drug1Str},drug2=#{drug2Str},adr=#{adr},adr1=#{adr1},adr2=#{adr2},adr3=#{adr3},adr4=#{adr4},adr5=#{adr5},adr6=#{adr6},adr7=#{adr7},adr8=#{adr8},adr9=#{adr9},adr10=#{adr10},
			adrtxt=#{adrtxt},adrDate=#{adrDateDate},adrH=#{adrH},adrM=#{adrM},adrDescription=#{adrDescription},adrDeal=#{adrDealStr},adrDeal3=#{adrDeal3Str},adrDeal3txt=#{adrDeal3txt},adrDealDose=#{adrDealDose},
			adrDeal4txt=#{adrDeal4txt},adrDealRemark=#{adrDealRemark},ending=#{endingStr},endingtxt=#{endingtxt},deathDate=#{deathDateDate},deathReason=#{deathReason},adrStop=#{adrStopStr},adrRestart=#{adrRestartStr},
			evaluate=#{evaluateStr},career=#{careerStr},careertxt=#{careertxt},email=#{email},reportDate=#{reportDateDate},remark=#{remark} 
		where no=#{no}
	</update>
	<select id="getBasicInfoIdByNo" parameterType="string" resultType="cn.com.ecrf.trq.model.PatientInfoCase">
		select id as id from crf_patient_info where no=#{no}
	</select>
	<select id="getSexStat" resultType="cn.com.ecrf.trq.model.stat.AgeStat">
		select sex as name,
		       count(1) as number 
		from crf_patient_info group by sex order by sex;
	</select>
	<select id="getAgeStat" resultType="int" parameterType="map">
		select 
		       count(*) as number 
		from crf_patient_info where age>=#{start} and #{end}>=age
	</select>
		<select id="getHospitalStat" resultType="cn.com.ecrf.trq.model.stat.HospitalStat">
		select organization_name as name,
				lockstatus as lockStatus, 
				count(1) as number
		from ac_organization o, ac_user u, crf_patient_info p, crf_user_sign s
		where p.no=s.no and s.cro_name=u.user_name and u.fk_organization_id=o.id
		group by organization_name, lockstatus
	</select>
	<delete id="deleteDrugUseInfoByDrugUseId" parameterType="map">
		delete from crf_druguse_info where no in (select no from crf_patient_info where id=#{id})
      	and seq=#{drugUseId}
	</delete>
	<delete id="deleteDrugUseInfoByNo" parameterType="string">
		delete from crf_druguse_info where no=#{no}
	</delete>
	<delete id="deleteADR" parameterType="string">
		delete from crf_adr_info where no=#{no}
	</delete>
	<delete id="deleteDiseaseInfo" parameterType="string">
		delete from crf_disease_info where no=#{no}
	</delete>
	<delete id="deleteDrugCombinationList" parameterType="string">
		delete from crf_drugcombination_info where no=#{no}
	</delete>
	<delete id="deleteDrugCombinationBase" parameterType="string">
		delete from crf_drugcombination_base where no=#{no}
	</delete>
	<delete id="deleteLabExamCase" parameterType="string">
		delete from crf_labexam_info where no=#{no}
	</delete>
	<delete id="deletePastHistory" parameterType="string">
		delete from crf_past_history where no=#{no}
	</delete>
	<delete id="deletePersonHistory" parameterType="string">
		delete from crf_person_history where no=#{no}
	</delete>
	<delete id="deleteDrugSummary" parameterType="string">
		delete from crf_drugsummary_info where no=#{no}
	</delete>
	<select id="getDrugCombinationBase" parameterType="string" resultType="cn.com.ecrf.trq.model.DrugCombinationBase">
		select no as no,
			   hasDrug as hasDrug,
			   drug as drug
		from crf_drugcombination_base where no=#{no}
	</select>
	<update id="updateDrugCombinationBase" parameterType="cn.com.ecrf.trq.model.DrugCombinationBase">
		update crf_drugcombination_base set hasDrug=#{hasDrug}, drug=#{drug} where no=#{no}
	</update>
	<insert id="insertDrugCombinationBase" parameterType="cn.com.ecrf.trq.model.DrugCombinationBase">
		insert into crf_drugcombination_base(no, hasDrug, drug) values(#{no}, #{hasDrug}, #{drug});
	</insert>
</mapper>