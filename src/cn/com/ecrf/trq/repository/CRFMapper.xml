<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="cn.com.ecrf.trq.repository.CRFMapper">
	<resultMap id="patientInfoResultMap" type="cn.com.ecrf.trq.model.PatientInfoCase" >
	    <id column="id" property="id" jdbcType="INTEGER" />
	    <result column="no" property="no" jdbcType="VARCHAR" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="abbr" property="abbr" jdbcType="VARCHAR" />
	    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
	    <result column="age" property="age" jdbcType="INTEGER" />
	    <result column="weight" property="weight" jdbcType="FLOAT" />
	    <result column="sex" property="sex" jdbcType="VARCHAR" />
	    <result column="ethic" property="ethic" jdbcType="VARCHAR" />
	    <result column="hys" property="hys" jdbcType="VARCHAR" />
	    <result column="height" property="height" jdbcType="INTEGER" />
	    <result column="yyks" property="yyks" jdbcType="VARCHAR" />
	    <result column="ryrq" property="ryrq" jdbcType="TIMESTAMP" />
	    <result column="cyrq" property="cyrq" jdbcType="TIMESTAMP" />
	    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
	    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
	</resultMap>
	<insert id="insertPatientInfo" parameterType="cn.com.ecrf.trq.model.PatientInfoCase">
      	<selectKey resultType="Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID()
		</selectKey>
	    insert into crf_patient_info (id, no, name, abbr, birthday, age,
	      weight, sex, ethic, hys, height, yyks, ryrq, cyrq, ylfyfs, create_time, create_by)
	    values (#{id}, #{no}, #{name}, #{abbr}, #{birthday}, #{age}, 
	      #{weight}, #{sex}, #{ethic}, #{hys}, #{height}, #{yyks}, #{ryrq}, #{cyrq}, #{ylfyfs}, 
	      current_timestamp(), createBy)
	</insert>
	<update id="updatePatientInfo" parameterType="cn.com.ecrf.trq.model.PatientInfoCase" >
	    update crf_patient_info (id, no, name, abbr, birthday, age,
	      weight, sex, ethic, hys, height, yyks, ryrq, cyrq, ylfyfs, create_time, create_by)
	    values (#{id}, #{no}, #{name}, #{abbr}, #{birthday}, #{age}, 
	      #{weight}, #{sex}, #{ethic}, #{hys}, #{height}, #{yyks}, #{ryrq}, #{cyrq}, #{ylfyfs}, 
	      current_timestamp(), createBy)
	</update>
	<select id="getDoubtCRFNum" parameterType="string" resultType="int">
		select count(*) from crf_user_sign c where c.lockstatus=30 and cro_name=#{userName}
	</select>
  	<select id="getToDoNum" parameterType="string" resultType="int">
		select count(*) from crf_user_sign c where c.lockstatus=10 and cro_name=#{userName}
	</select>
	<select id="getPatientList" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="cn.com.ecrf.trq.model.list.ListReturn">
		select 
			p.abbr as abbr,
			p.no as no,
			p.id as id,
			us.cro_createtime as createDate,
			us.cro_updatetime as lastModified,
			us.progress as progress
		 from crf_patient_info p, crf_user_sign us where us.lockstatus=#{lockStatus} and p.no=us.no
		 <if test="abbr != null and abbr != ''" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null and  no != ''" >
        	and p.no=#{no}
      	</if>
		<choose>
			<when test="progressType == 1">
				and us.progress >= #{progress}
			</when>
			<when test="progressType == 2">
				and #{progress} >= us.progress
			</when>
		    <otherwise>    
            </otherwise>    
		</choose>
      	<if test="createDateForm != null" >
        	and us.cro_createtime>=#{createDateForm} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
      	<if test="limitSize > 0">
      		LIMIT #{limitStart},#{limitSize}
      	</if>
	</select>
	
	<select id="getTotalPatientNum" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="int">
		select 
			count(*)
		 from crf_patient_info p, crf_user_sign us where us.lockstatus=#{lockStatus} and p.no=us.no
		 <if test="abbr != null and abbr != ''" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null and  no != ''" >
        	and p.no=#{no}
      	</if>
		<choose>
			<when test="progressType == 1">
				and us.progress >= #{progress}
			</when>
			<when test="progressType == 2">
				and #{progress} >= us.progress
			</when>
		    <otherwise>    
            </otherwise>    
		</choose>
      	<if test="createDateForm != null" >
        	and us.cro_createtime>=#{createDateForm} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
	</select>
	
	
	
	<select id="getDoutSummaryList" parameterType="cn.com.ecrf.trq.model.list.ListCondition" resultType="cn.com.ecrf.trq.model.list.ListReturn">
		select 
			p.abbr as abbr,
			p.no as no,
			p.id as id,
			us.cro_createtime as createDate,
			us.cro_updatetime as lastModified,
			us.progress as progress
		 from crf_patient_info p, crf_user_sign us where c.lockstatus=#{lockStatus} and p.no=us.no
		 <if test="abbr != null" >
        	and p.abbr=#{abbr}
      	</if>
      	<if test="no != null" >
        	and p.no=#{no}
      	</if>
      	<if test="createDateForm != null" >
        	and us.cro_createtime>=#{createDateForm} and #{createDateTo}>=us.cro_createtime
      	</if>
      	<if test="lastModifiedFrom != null" >
        	and us.cro_updatetime>=#{lastModifiedFrom} and #{lastModifiedTo}>=us.cro_updatetime
      	</if>
	</select>
	<select id="getProgress" parameterType="string" resultType="int">
		select progress from crf_user_sign where no=#{no}
	</select>
	<select id="getCRFSumm" parameterType="int" resultType="cn.com.ecrf.trq.model.list.ListReturn">
		select 
			p.abbr as abbr,
			p.no as no,
			p.id as id,
			us.cro_createtime as createDate,
			us.cro_updatetime as lastModified,
			us.progress as progress
		 from crf_patient_info p, crf_user_sign us where p.no=us.no and p.id=#{id}
	</select>
	<select id="getBasicInfo" parameterType="int" resultType="cn.com.ecrf.trq.model.PatientInfoCase">
		select 
			id as id,
			no as no,
			name as name,
			abbr as abbr,
			birthday as birthday,
			age as age,
			weight as weight,
			weightud as weightud,
			sex as sex,
			ethic as ethic,
			hys as hys,
			height as height,
			heightud as heightud,
			yyks as yyks,
			ryrq as ryrq,
			cyrq as cyrq,
			ylfyfs as ylfyfs
			from crf_patient_info where id=#{id}
	</select>
	<select id="getPersonHistory" parameterType="int" resultType="cn.com.ecrf.trq.model.PersonAllergicHistoryCase">
		select 
			pi.id as id,
			pi.no as no,
			smoke as smoke,
			drink as drink,
			drug as drug,
			food as food,
			other as other,
			druglb as druglb,
			foodlb as foodlb,
			otherlb as otherlb
			from crf_person_history ph, crf_patient_info pi where pi.id=#{id} and pi.no=ph.no
	</select>
	<insert id="insertPersonHistory" parameterType="cn.com.ecrf.trq.model.PersonAllergicHistoryCase">
	    insert into crf_person_history (no, smoke, drink, drug, food,
	      other, druglb, foodlb, otherlb, create_time)
	    values (#{no}, #{smoke}, #{drug}, #{food}, #{other}, 
	      #{druglb}, #{foodlb}, current_timestamp());
	</insert>
	<update id="updatePersonHistory" parameterType="cn.com.ecrf.trq.model.PersonAllergicHistoryCase" >
		update crf_person_history set
		smoke=#{smoke}, drink=#{drink}, drug=#{drug},
		food=#{food}, other=#{other}, druglb=#{druglb}, foodlb=#{foodlb}, otherlb=#{otherlb}, update_time=now()
  		where no=#{no}
	</update>
	<update id="updateProgress" parameterType="int">
		update crf_patient_info p, crf_user_sign us set us.progress=#{progress} and p.no=us.no and p.id=#{id}
	</update>
	<select id="getPastHistory" parameterType="int" resultType="cn.com.ecrf.trq.model.PastHistoryCase">
		select 
			pi.id as id,
			ph.no as no,
			disease as disease,
			diseaselb as diseaselb,
			allergy as allergy,
			allergylb as allergylb
			from crf_past_history ph, crf_patient_info pi where pi.id=#{id} and pi.no=ph.no
	</select>
	<insert id="insertPastHistory" parameterType="cn.com.ecrf.trq.model.PastHistoryCase">
	    insert into crf_past_history (no, disease, diseaselb, allergy, allergylb, create_time)
	    values (#{no}, #{disease}, #{diseaselb}, #{allergy}, #{allergylb}, current_timestamp());
	</insert>
	<update id="updatePastHistory" parameterType="cn.com.ecrf.trq.model.PastHistoryCase" >
		update crf_past_history set
		disease=#{disease}, diseaselb=#{diseaselb}, allergy=#{allergy},
		allergylb=#{allergylb}, update_time=now()
  		where no=#{no}
	</update>
	<update id="updateNextSeq" parameterType="int">
		update crf_no set seq=seq+1 where fk_organization_id=#{id}
	</update>
	<select id="getNextSeq" resultType="int">
		select seq from crf_no where fk_organization_id=#{id}
	</select>
	<insert id="insertCRF" parameterType="cn.com.ecrf.trq.model.PatientInfoCase">
      	<selectKey resultType="int" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID()
		</selectKey>
	    insert into crf_patient_info (no, abbr, create_time, create_by)
	    values (#{no}, #{abbr}, current_timestamp(), #{createBy})
	</insert>
	<select id="getFormEnumValueByName" parameterType="map" resultType="int">
		select seq from crf_form_enum where name=#{name} and abbr=#{type}
	</select>
	<select id="getFormEnumValue" parameterType="map" resultType="string">
		select name from crf_form_enum where abbr=#{type} and seq=#{seq}
	</select>
</mapper>