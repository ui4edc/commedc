<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.com.ecrf.trq.repository.OrganizationMapper" >
  
  <resultMap id="OrganizationResultMap" type="cn.com.ecrf.trq.model.Organization" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="organization_name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="organization_desc" property="organizationDesc" jdbcType="VARCHAR" />
    <result column="instance_number" property="instanceNumber" jdbcType="INTEGER" />
    <result column="parent_organization" property="parentOrganization" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="fk_adminuser_id" property="adminUserId" jdbcType="INTEGER" />
    <result column="fk_adminuser_name" property="adminUserName" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- organization -->
  <sql id="Base_Column_List" >
    id, organization_name, organization_desc, create_time, update_time, update_time, update_by, instance_number,
    fk_adminuser_id, fk_adminuser_name
  </sql>
  <insert id="insertOrganization" parameterType="cn.com.ecrf.trq.model.Organization">
	<selectKey resultType="Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID()
	</selectKey>
  	insert into ac_organization(id, organization_name, organization_desc, create_time, create_by, instance_number, 
  	fk_adminuser_id, fk_adminuser_name) values(#{id}, #{name}, #{organizationDesc}, now(), #{createBy}, #{instanceNumber},
  	adminUserId, adminUserName);
  </insert>
  <update id="updateOrganization" parameterType="cn.com.ecrf.trq.model.Organization">
  	update ac_organization set organization_name=#{name}, organization_desc=#{organizationDesc}, update_time=now(),
  	update_by=#{updateBy}, instance_number=#{instanceNumber},fk_adminuser_id=#{adminUserId},
  	fk_adminuser_name=#{adminUserName} where id=#{id}
  </update>
  <delete id="deleteOrganizationById" parameterType="int">
  	delete from ac_organization where id=#{id}
  </delete>
   <select id="getOrganizationById" parameterType="int" resultMap="OrganizationResultMap">
  	select 
    <include refid="Base_Column_List" />
    from ac_organization where id=#{id}
  </select>
  <select id="findOrganizationByName" parameterType="string" resultMap="OrganizationResultMap">
  	select 
    <include refid="Base_Column_List" />
    from ac_organization where id=#{name}
  </select>
  <select id="findOrganizations" resultMap="OrganizationResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from ac_organization
     LIMIT #{limitStart},#{limitSize} 
  </select>
   <select id="getNum" resultType="int">
  	select count(*) from ac_organization
  </select>
  
</mapper>